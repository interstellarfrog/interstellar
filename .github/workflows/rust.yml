name: Rust

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    timeout-minutes: 30
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
      
    - name: Update
      run: rustup update && rustup update nightly && rustup default nightly
    
    - name: Add rust-src
      run: rustup component add rust-src
    
    - name: Add Target x86_64-unknown-none
      run: rustup target add x86_64-unknown-none
    
    - name: Add LLVM-Tools-Preview
      run: rustup component add llvm-tools-preview
      
    - name: Cargo Version
      run: cargo --version --verbose

    - name: Cargo config
      run: cargo -Z unstable-options config get
      
    # install QEMU
    - name: Install QEMU (Linux)
      run: sudo apt update && sudo apt install qemu-system-x86
      if: runner.os == 'Linux'
    - name: Install QEMU (macOS)
      run: brew install qemu
      if: runner.os == 'macOS'
      env:
        HOMEBREW_NO_AUTO_UPDATE: 1
        HOMEBREW_NO_BOTTLE_SOURCE_FALLBACK: 1
        HOMEBREW_NO_INSTALL_CLEANUP: 1
    - name: Install QEMU (Windows)
      run: |
        choco install qemu --version 2021.5.5
        echo "$Env:Programfiles\qemu" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
      if: runner.os == 'Windows'
      shell: pwsh

    - name: Show QEMU version
      run: qemu-system-x86_64 --version

    - name: Build
      run: cargo build --verbose
      
    - name: Check
      run: cargo check --verbose
    
    - name: Test
      run: cargo test -- --uefi --verbose
