{"message":"mismatched types","code":{"code":"E0308","explanation":"Expected type did not match the received type.\n\nErroneous code examples:\n\n```compile_fail,E0308\nfn plus_one(x: i32) -> i32 {\n    x + 1\n}\n\nplus_one(\"Not a number\");\n//       ^^^^^^^^^^^^^^ expected `i32`, found `&str`\n\nif \"Not a bool\" {\n// ^^^^^^^^^^^^ expected `bool`, found `&str`\n}\n\nlet x: f32 = \"Not a float\";\n//     ---   ^^^^^^^^^^^^^ expected `f32`, found `&str`\n//     |\n//     expected due to this\n```\n\nThis error occurs when an expression was used in a place where the compiler\nexpected an expression of a different type. It can occur in several cases, the\nmost common being when calling a function and passing an argument which has a\ndifferent type than the matching type in the function declaration.\n"},"level":"error","spans":[{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4838,"byte_end":4843,"line_start":126,"line_end":126,"column_start":65,"column_end":70,"is_primary":true,"text":[{"text":"                let f: fn(&'static mut $crate::BootInfo) -> ! = $path;","highlight_start":65,"highlight_end":70}],"label":"types differ in mutability","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4120,"byte_end":4198,"line_start":112,"line_end":112,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        $crate::entry_point!($path, config = &$crate::BootloaderConfig::new_default());","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\syscall.rs","byte_start":368,"byte_end":403,"line_start":12,"line_end":12,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"entry_point!(system_call_test_main);","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4797,"byte_end":4835,"line_start":126,"line_end":126,"column_start":24,"column_end":62,"is_primary":false,"text":[{"text":"                let f: fn(&'static mut $crate::BootInfo) -> ! = $path;","highlight_start":24,"highlight_end":62}],"label":"expected due to this","suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4120,"byte_end":4198,"line_start":112,"line_end":112,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        $crate::entry_point!($path, config = &$crate::BootloaderConfig::new_default());","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\syscall.rs","byte_start":368,"byte_end":403,"line_start":12,"line_end":12,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"entry_point!(system_call_test_main);","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},{"file_name":"tests\\syscall.rs","byte_start":408,"byte_end":468,"line_start":14,"line_end":14,"column_start":1,"column_end":61,"is_primary":false,"text":[{"text":"fn system_call_test_main(_boot_info: &'static BootInfo) -> ! {","highlight_start":1,"highlight_end":61}],"label":"function `system_call_test_main` defined here","suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"expected fn pointer `fn(&'static mut BootInfo) -> _`\n      found fn item `fn(&'static BootInfo) -> _ {system_call_test_main}`","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"when the arguments and return types match, functions can be coerced to function pointers","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"use parentheses to call this function","code":null,"level":"help","spans":[{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4843,"byte_end":4843,"line_start":126,"line_end":126,"column_start":70,"column_end":70,"is_primary":true,"text":[{"text":"                let f: fn(&'static mut $crate::BootInfo) -> ! = $path;","highlight_start":70,"highlight_end":70}],"label":null,"suggested_replacement":"(/* &'static BootInfo */)","suggestion_applicability":"HasPlaceholders","expansion":{"span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4120,"byte_end":4198,"line_start":112,"line_end":112,"column_start":9,"column_end":87,"is_primary":false,"text":[{"text":"        $crate::entry_point!($path, config = &$crate::BootloaderConfig::new_default());","highlight_start":9,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":{"span":{"file_name":"tests\\syscall.rs","byte_start":368,"byte_end":403,"line_start":12,"line_end":12,"column_start":1,"column_end":36,"is_primary":false,"text":[{"text":"entry_point!(system_call_test_main);","highlight_start":1,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},"macro_decl_name":"entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}},"macro_decl_name":"$crate::entry_point!","def_site_span":{"file_name":"C:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs","byte_start":4063,"byte_end":4087,"line_start":110,"line_end":110,"column_start":1,"column_end":25,"is_primary":false,"text":[{"text":"macro_rules! entry_point {","highlight_start":1,"highlight_end":25}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}}}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0308]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: mismatched types\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\syscall.rs:12:1\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mentry_point!(system_call_test_main);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mtypes differ in mutability\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9mexpected due to this\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mfn system_call_test_main(_boot_info: &'static BootInfo) -> ! {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m------------------------------------------------------------\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mfunction `system_call_test_main` defined here\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: expected fn pointer `fn(\u001b[0m\u001b[0m\u001b[1m&'static mut \u001b[0m\u001b[0mBootInfo) -> _`\u001b[0m\n\u001b[0m                 found fn item `fn(\u001b[0m\u001b[0m\u001b[1m&'static \u001b[0m\u001b[0mBootInfo) -> _ {system_call_test_main}`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: when the arguments and return types match, functions can be coerced to function pointers\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: this error originates in the macro `$crate::entry_point` which comes from the expansion of the macro `entry_point` (in Nightly builds, run with -Z macro-backtrace for more info)\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: use parentheses to call this function\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\zmurp\\.cargo\\registry\\src\\index.crates.io-6f17d22bba15001f\\bootloader_api-0.11.3\\src\\lib.rs:126:70\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m126| \u001b[0m\u001b[0m                let f: fn(&'static mut $crate::BootInfo) -> ! = $path\u001b[0m\u001b[0m\u001b[38;5;10m(/* &'static BootInfo */)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m                                                                      \u001b[0m\u001b[0m\u001b[38;5;10m+++++++++++++++++++++++++\u001b[0m\n\n"}
{"message":"this function takes 1 argument but 0 arguments were supplied","code":{"code":"E0061","explanation":"An invalid number of arguments was passed when calling a function.\n\nErroneous code example:\n\n```compile_fail,E0061\nfn f(u: i32) {}\n\nf(); // error!\n```\n\nThe number of arguments passed to a function must match the number of arguments\nspecified in the function signature.\n\nFor example, a function like:\n\n```\nfn f(a: u16, b: &str) {}\n```\n\nMust always be called with exactly two arguments, e.g., `f(2, \"test\")`.\n\nNote that Rust does not have a notion of optional function arguments or\nvariadic functions (except for its C-FFI).\n"},"level":"error","spans":[{"file_name":"tests\\syscall.rs","byte_start":480,"byte_end":482,"line_start":15,"line_end":15,"column_start":9,"column_end":11,"is_primary":false,"text":[{"text":"    init();","highlight_start":9,"highlight_end":11}],"label":"an argument of type `&'static mut BootInfo` is missing","suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"tests\\syscall.rs","byte_start":476,"byte_end":480,"line_start":15,"line_end":15,"column_start":5,"column_end":9,"is_primary":true,"text":[{"text":"    init();","highlight_start":5,"highlight_end":9}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"function defined here","code":null,"level":"note","spans":[{"file_name":"C:\\Users\\zmurp\\OneDrive\\Documents\\Code\\Rust\\interstellar_os\\interstellar_os\\kernel\\src\\lib.rs","byte_start":2287,"byte_end":2291,"line_start":77,"line_end":77,"column_start":8,"column_end":12,"is_primary":true,"text":[{"text":"pub fn init(boot_info: &'static mut BootInfo) {","highlight_start":8,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":null},{"message":"provide the argument","code":null,"level":"help","spans":[{"file_name":"tests\\syscall.rs","byte_start":480,"byte_end":482,"line_start":15,"line_end":15,"column_start":9,"column_end":11,"is_primary":true,"text":[{"text":"    init();","highlight_start":9,"highlight_end":11}],"label":null,"suggested_replacement":"(/* &'static mut BootInfo */)","suggestion_applicability":"HasPlaceholders","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror[E0061]\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: this function takes 1 argument but 0 arguments were supplied\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mtests\\syscall.rs:15:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0m    init();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;9m^^^^\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14man argument of type `&'static mut BootInfo` is missing\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;10mnote\u001b[0m\u001b[0m: function defined here\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0mC:\\Users\\zmurp\\OneDrive\\Documents\\Code\\Rust\\interstellar_os\\interstellar_os\\kernel\\src\\lib.rs:77:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m77\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m \u001b[0m\u001b[0mpub fn init(boot_info: &'static mut BootInfo) {\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;10m^^^^\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: provide the argument\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    init\u001b[0m\u001b[0m\u001b[38;5;10m(/* &'static mut BootInfo */)\u001b[0m\u001b[0m;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\u001b[0m         \u001b[0m\u001b[0m\u001b[38;5;10m~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\u001b[0m\n\n"}
{"message":"aborting due to 2 previous errors","code":null,"level":"error","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;9merror\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: aborting due to 2 previous errors\u001b[0m\n\n"}
{"message":"Some errors have detailed explanations: E0061, E0308.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mSome errors have detailed explanations: E0061, E0308.\u001b[0m\n"}
{"message":"For more information about an error, try `rustc --explain E0061`.","code":null,"level":"failure-note","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;15mFor more information about an error, try `rustc --explain E0061`.\u001b[0m\n"}
